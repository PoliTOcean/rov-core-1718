<launch>
    <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="cam_fhd" />
        <!-- means video device 0, /dev/video0 -->
        <arg name="video_stream_provider" value="0" />
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="30" />
        <!--set buffer queue size of frame capturing to-->
        <arg name="buffer_queue_size" value="5" />
        <!-- setting frame_id -->
        <arg name="frame_id" value="cam_fhd" />
        <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
        "file:///$(find your_camera_package)/config/your_camera.yaml" -->
        <arg name="camera_info_url" value="file:///$(find politocean)/launches/pTo_fhd.yaml" />
        <!-- flip the image horizontally (mirror it) -->
        <arg name="flip_horizontal" value="false" />
        <!-- flip the image vertically -->
        <arg name="flip_vertical" value="false" />
        <!-- force a width and height, 0 means no forcing -->
        <arg name="width" value="640"/>
        <arg name="height" value="480"/>
        <!-- true to visualize the stream generated -->
        <arg name="visualize" value="false" />
    </include>

    <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="cam1" />
        <!-- means video device 1, /dev/video1 -->
        <arg name="video_stream_provider" value="1" />
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="30" />
        <!--set buffer queue size of frame capturing to-->
        <arg name="buffer_queue_size" value="5" />
        <!-- setting frame_id -->
        <arg name="frame_id" value="cam1" />
        <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
        "file:///$(find your_camera_package)/config/your_camera.yaml" -->
        <arg name="camera_info_url" value="" />
        <!-- flip the image horizontally (mirror it) -->
        <arg name="flip_horizontal" value="false" />
        <!-- flip the image vertically -->
        <arg name="flip_vertical" value="false" />
        <!-- force a width and height, 0 means no forcing -->
        <arg name="width" value="640"/>
        <arg name="height" value="480"/>
        <!-- true to visualize the stream generated -->
        <arg name="visualize" value="false" />
    </include>

    <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="cam2" />
        <!-- means video device 2, /dev/video2 -->
        <arg name="video_stream_provider" value="2" />
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="30" />
        <!--set buffer queue size of frame capturing to-->
        <arg name="buffer_queue_size" value="5" />
        <!-- setting frame_id -->
        <arg name="frame_id" value="cam2" />
        <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
        "file:///$(find your_camera_package)/config/your_camera.yaml" -->
        <arg name="camera_info_url" value="" />
        <!-- flip the image horizontally (mirror it) -->
        <arg name="flip_horizontal" value="false" />
        <!-- flip the image vertically -->
        <arg name="flip_vertical" value="false" />
        <!-- force a width and height, 0 means no forcing -->
        <arg name="width" value="640"/>
        <arg name="height" value="480"/>
        <!-- true to visualize the stream generated -->
        <arg name="visualize" value="false" />
    </include>
</launch>
